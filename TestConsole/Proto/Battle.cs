// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf.Data {

  /// <summary>Holder for reflection information generated from battle.proto</summary>
  public static partial class BattleReflection {

    #region Descriptor
    /// <summary>File descriptor for battle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxiYXR0bGUucHJvdG8SBnBiZGF0YRoMY29tbW9uLnByb3RvIiUKEkJhdHRs",
            "ZVN0YXJ0UmVxdWVzdBIPCgdFdmVudElEGAEgASgFIiYKE0JhdHRsZVN0YXJ0",
            "UmVzcG9uc2USDwoHU3VjY2VzcxgBIAEoCCJTChBCYXR0bGVFbmRSZXF1ZXN0",
            "Eg8KB0V2ZW50SUQYASABKAUSLgoOUGxheWVyUHJvcGVydHkYAiABKAsyFi5w",
            "YmRhdGEuUGxheWVyUHJvcGVydHkiJAoRQmF0dGxlRW5kUmVzcG9uc2USDwoH",
            "U3VjY2VzcxgBIAEoCEIQqgINUHJvdG9idWYuRGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protobuf.Data.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Data.BattleStartRequest), global::Protobuf.Data.BattleStartRequest.Parser, new[]{ "EventID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Data.BattleStartResponse), global::Protobuf.Data.BattleStartResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Data.BattleEndRequest), global::Protobuf.Data.BattleEndRequest.Parser, new[]{ "EventID", "PlayerProperty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Data.BattleEndResponse), global::Protobuf.Data.BattleEndResponse.Parser, new[]{ "Success" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///* 开始战斗请求 */
  /// </summary>
  public sealed partial class BattleStartRequest : pb::IMessage<BattleStartRequest> {
    private static readonly pb::MessageParser<BattleStartRequest> _parser = new pb::MessageParser<BattleStartRequest>(() => new BattleStartRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleStartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Data.BattleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartRequest(BattleStartRequest other) : this() {
      eventID_ = other.eventID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartRequest Clone() {
      return new BattleStartRequest(this);
    }

    /// <summary>Field number for the "EventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private int eventID_;
    /// <summary>
    ///* 事件ID 或 虚拟事件ID */
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventID {
      get { return eventID_; }
      set {
        eventID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleStartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleStartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID != 0) hash ^= EventID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EventID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleStartRequest other) {
      if (other == null) {
        return;
      }
      if (other.EventID != 0) {
        EventID = other.EventID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            EventID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///* 战斗开始请求结果 */
  /// </summary>
  public sealed partial class BattleStartResponse : pb::IMessage<BattleStartResponse> {
    private static readonly pb::MessageParser<BattleStartResponse> _parser = new pb::MessageParser<BattleStartResponse>(() => new BattleStartResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleStartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Data.BattleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartResponse(BattleStartResponse other) : this() {
      success_ = other.success_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStartResponse Clone() {
      return new BattleStartResponse(this);
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///* 是否成功，一定为true */
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleStartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleStartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleStartResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///* 结束后战斗请求 */
  /// </summary>
  public sealed partial class BattleEndRequest : pb::IMessage<BattleEndRequest> {
    private static readonly pb::MessageParser<BattleEndRequest> _parser = new pb::MessageParser<BattleEndRequest>(() => new BattleEndRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleEndRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Data.BattleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndRequest(BattleEndRequest other) : this() {
      eventID_ = other.eventID_;
      PlayerProperty = other.playerProperty_ != null ? other.PlayerProperty.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndRequest Clone() {
      return new BattleEndRequest(this);
    }

    /// <summary>Field number for the "EventID" field.</summary>
    public const int EventIDFieldNumber = 1;
    private int eventID_;
    /// <summary>
    ///* 事件ID 或 虚拟事件ID */
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventID {
      get { return eventID_; }
      set {
        eventID_ = value;
      }
    }

    /// <summary>Field number for the "PlayerProperty" field.</summary>
    public const int PlayerPropertyFieldNumber = 2;
    private global::Protobuf.Data.PlayerProperty playerProperty_;
    /// <summary>
    ///* 更新玩家状态信息 */
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.Data.PlayerProperty PlayerProperty {
      get { return playerProperty_; }
      set {
        playerProperty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleEndRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleEndRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventID != other.EventID) return false;
      if (!object.Equals(PlayerProperty, other.PlayerProperty)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventID != 0) hash ^= EventID.GetHashCode();
      if (playerProperty_ != null) hash ^= PlayerProperty.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EventID);
      }
      if (playerProperty_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerProperty);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventID);
      }
      if (playerProperty_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerProperty);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleEndRequest other) {
      if (other == null) {
        return;
      }
      if (other.EventID != 0) {
        EventID = other.EventID;
      }
      if (other.playerProperty_ != null) {
        if (playerProperty_ == null) {
          playerProperty_ = new global::Protobuf.Data.PlayerProperty();
        }
        PlayerProperty.MergeFrom(other.PlayerProperty);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            EventID = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerProperty_ == null) {
              playerProperty_ = new global::Protobuf.Data.PlayerProperty();
            }
            input.ReadMessage(playerProperty_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///* 战斗结束请求结果 */
  /// </summary>
  public sealed partial class BattleEndResponse : pb::IMessage<BattleEndResponse> {
    private static readonly pb::MessageParser<BattleEndResponse> _parser = new pb::MessageParser<BattleEndResponse>(() => new BattleEndResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleEndResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Data.BattleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndResponse(BattleEndResponse other) : this() {
      success_ = other.success_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEndResponse Clone() {
      return new BattleEndResponse(this);
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///* 是否成功，一定为true */
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleEndResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleEndResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleEndResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
